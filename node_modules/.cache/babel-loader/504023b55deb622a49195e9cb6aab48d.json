{"ast":null,"code":"import Axios from \"axios\";\nimport { CLIENT_ID, CLIENT_SECRET } from \"../../components/GtihubCredentials\";\nexport const FETCH_PROFILE_INFO_REQUEST = 'FETCH_PROFILE_INFO_REQUEST';\nexport const FETCH_PROFILE_INFO_SUCCESS = 'FETCH_PROFILE_INFO_SUCCESS';\nexport const FETCH_PROFILE_INFO_FAILURE = 'FETCH_PROFILE_INFO_FAILURE';\nexport const FETCH_REPOS_INFO_REQUEST = 'FETCH_REPOS_INFO_REQUEST';\nexport const FETCH_REPOS_INFO_SUCCESS = 'FETCH_REPOS_INFO_SUCCESS';\nexport const FETCH_REPOS_INFO_FAILURE = 'FETCH_REPOS_INFO_FAILURE';\nexport const fetchProfileInfo = githubUser => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: FETCH_PROFILE_INFO_REQUEST\n      });\n      let dataURL = `https://api.github.com/users/${githubUser}?client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`;\n      let response = await Axios.get(dataURL);\n      dispatch({\n        type: FETCH_PROFILE_INFO_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: FETCH_PROFILE_INFO_FAILURE,\n        payload: error\n      });\n    }\n  };\n};\nexport const fetchReposInfo = githubUser => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: FETCH_REPOS_INFO_REQUEST\n      });\n      let dataURL = `https://api.github.com/users/${githubUser}/repos?client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`;\n      let response = await Axios.get(dataURL);\n      dispatch({\n        type: FETCH_REPOS_INFO_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: FETCH_REPOS_INFO_FAILURE,\n        payload: error\n      });\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/hp/gitHubusersearch/GitHub_Profile_Search/src/redux/githubSearch/githubSearch.actions.js"],"names":["Axios","CLIENT_ID","CLIENT_SECRET","FETCH_PROFILE_INFO_REQUEST","FETCH_PROFILE_INFO_SUCCESS","FETCH_PROFILE_INFO_FAILURE","FETCH_REPOS_INFO_REQUEST","FETCH_REPOS_INFO_SUCCESS","FETCH_REPOS_INFO_FAILURE","fetchProfileInfo","githubUser","dispatch","type","dataURL","response","get","payload","data","error","fetchReposInfo"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,aAAnB,QAAuC,oCAAvC;AAEA,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AAEP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AACP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AACP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AAEP,OAAO,MAAMC,gBAAgB,GAAIC,UAAD,IAAgB;AAC5C,SAAO,MAAOC,QAAP,IAAoB;AACvB,QAAI;AACAA,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAGT;AAAR,OAAD,CAAR;AACA,UAAIU,OAAO,GAAI,gCAA+BH,UAAW,cAAaT,SAAU,kBAAiBC,aAAc,EAA/G;AACA,UAAIY,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAUF,OAAV,CAArB;AACAF,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAGR,0BAAR;AAAqCY,QAAAA,OAAO,EAAGF,QAAQ,CAACG;AAAxD,OAAD,CAAR;AACH,KALD,CAMA,OAAOC,KAAP,EAAc;AACVP,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAGP,0BAAR;AAAqCW,QAAAA,OAAO,EAAGE;AAA/C,OAAD,CAAR;AACH;AACJ,GAVD;AAWH,CAZM;AAcP,OAAO,MAAMC,cAAc,GAAIT,UAAD,IAAgB;AAC1C,SAAO,MAAOC,QAAP,IAAoB;AACvB,QAAI;AACAA,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAGN;AAAR,OAAD,CAAR;AACA,UAAIO,OAAO,GAAI,gCAA+BH,UAAW,oBAAmBT,SAAU,kBAAiBC,aAAc,EAArH;AACA,UAAIY,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAUF,OAAV,CAArB;AACAF,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAGL,wBAAR;AAAmCS,QAAAA,OAAO,EAAGF,QAAQ,CAACG;AAAtD,OAAD,CAAR;AACH,KALD,CAMA,OAAOC,KAAP,EAAc;AACVP,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAGJ,wBAAR;AAAmCQ,QAAAA,OAAO,EAAGE;AAA7C,OAAD,CAAR;AACH;AACJ,GAVD;AAWH,CAZM","sourcesContent":["import Axios from \"axios\";\r\nimport {CLIENT_ID, CLIENT_SECRET} from \"../../components/GtihubCredentials\";\r\n\r\nexport const FETCH_PROFILE_INFO_REQUEST = 'FETCH_PROFILE_INFO_REQUEST';\r\nexport const FETCH_PROFILE_INFO_SUCCESS = 'FETCH_PROFILE_INFO_SUCCESS';\r\nexport const FETCH_PROFILE_INFO_FAILURE = 'FETCH_PROFILE_INFO_FAILURE';\r\n\r\nexport const FETCH_REPOS_INFO_REQUEST = 'FETCH_REPOS_INFO_REQUEST';\r\nexport const FETCH_REPOS_INFO_SUCCESS = 'FETCH_REPOS_INFO_SUCCESS';\r\nexport const FETCH_REPOS_INFO_FAILURE = 'FETCH_REPOS_INFO_FAILURE';\r\n\r\nexport const fetchProfileInfo = (githubUser) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch({type : FETCH_PROFILE_INFO_REQUEST});\r\n            let dataURL = `https://api.github.com/users/${githubUser}?client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`;\r\n            let response = await Axios.get(dataURL);\r\n            dispatch({type : FETCH_PROFILE_INFO_SUCCESS , payload : response.data});\r\n        }\r\n        catch (error) {\r\n            dispatch({type : FETCH_PROFILE_INFO_FAILURE , payload : error});\r\n        }\r\n    }\r\n};\r\n\r\nexport const fetchReposInfo = (githubUser) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch({type : FETCH_REPOS_INFO_REQUEST});\r\n            let dataURL = `https://api.github.com/users/${githubUser}/repos?client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`;\r\n            let response = await Axios.get(dataURL);\r\n            dispatch({type : FETCH_REPOS_INFO_SUCCESS , payload : response.data});\r\n        }\r\n        catch (error) {\r\n            dispatch({type : FETCH_REPOS_INFO_FAILURE , payload : error});\r\n        }\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}