{"ast":null,"code":"import * as githubSearchActions from './githubSearch.actions';\nexport const githubSearchFeatureKey = 'githubSearch';\nlet initialState = {\n  loading: false,\n  errorMessage: '',\n  profile: {},\n  repos: []\n};\nexport const reducer = (state = initialState, action) => {\n  let {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    // for profile data\n    case githubSearchActions.FETCH_PROFILE_INFO_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case githubSearchActions.FETCH_PROFILE_INFO_SUCCESS:\n      return { ...state,\n        loading: false,\n        profile: payload\n      };\n\n    case githubSearchActions.FETCH_PROFILE_INFO_FAILURE:\n      return { ...state,\n        loading: false,\n        errorMessage: payload\n      };\n    // for repos data\n\n    case githubSearchActions.FETCH_REPOS_INFO_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case githubSearchActions.FETCH_REPOS_INFO_SUCCESS:\n      return { ...state,\n        loading: false,\n        repos: payload\n      };\n\n    case githubSearchActions.FETCH_REPOS_INFO_FAILURE:\n      return { ...state,\n        loading: false,\n        errorMessage: payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/hp/gitHubusersearch/GitHub_Profile_Search/src/redux/githubSearch/githubSearch.reducer.js"],"names":["githubSearchActions","githubSearchFeatureKey","initialState","loading","errorMessage","profile","repos","reducer","state","action","type","payload","FETCH_PROFILE_INFO_REQUEST","FETCH_PROFILE_INFO_SUCCESS","FETCH_PROFILE_INFO_FAILURE","FETCH_REPOS_INFO_REQUEST","FETCH_REPOS_INFO_SUCCESS","FETCH_REPOS_INFO_FAILURE"],"mappings":"AAAA,OAAO,KAAKA,mBAAZ,MAAqC,wBAArC;AAEA,OAAO,MAAMC,sBAAsB,GAAG,cAA/B;AAEP,IAAIC,YAAY,GAAG;AACfC,EAAAA,OAAO,EAAG,KADK;AAEfC,EAAAA,YAAY,EAAG,EAFA;AAGfC,EAAAA,OAAO,EAAG,EAHK;AAIfC,EAAAA,KAAK,EAAG;AAJO,CAAnB;AAOA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAwBO,MAAxB,KAAmC;AACtD,MAAI;AAACC,IAAAA,IAAD;AAAQC,IAAAA;AAAR,MAAmBF,MAAvB;;AACA,UAAOC,IAAP;AACI;AACA,SAAKV,mBAAmB,CAACY,0BAAzB;AACI,aAAO,EACH,GAAGJ,KADA;AAEHL,QAAAA,OAAO,EAAG;AAFP,OAAP;;AAIJ,SAAKH,mBAAmB,CAACa,0BAAzB;AACI,aAAO,EACH,GAAGL,KADA;AAEHL,QAAAA,OAAO,EAAG,KAFP;AAGHE,QAAAA,OAAO,EAAEM;AAHN,OAAP;;AAKJ,SAAKX,mBAAmB,CAACc,0BAAzB;AACI,aAAO,EACH,GAAGN,KADA;AAEHL,QAAAA,OAAO,EAAG,KAFP;AAGHC,QAAAA,YAAY,EAAEO;AAHX,OAAP;AAKH;;AACD,SAAKX,mBAAmB,CAACe,wBAAzB;AACI,aAAO,EACH,GAAGP,KADA;AAEHL,QAAAA,OAAO,EAAG;AAFP,OAAP;;AAIJ,SAAKH,mBAAmB,CAACgB,wBAAzB;AACI,aAAO,EACH,GAAGR,KADA;AAEHL,QAAAA,OAAO,EAAG,KAFP;AAGHG,QAAAA,KAAK,EAAEK;AAHJ,OAAP;;AAKJ,SAAKX,mBAAmB,CAACiB,wBAAzB;AACI,aAAO,EACH,GAAGT,KADA;AAEHL,QAAAA,OAAO,EAAG,KAFP;AAGHC,QAAAA,YAAY,EAAEO;AAHX,OAAP;;AAKJ;AAAU,aAAOH,KAAP;AArCd;AAuCH,CAzCM","sourcesContent":["import * as githubSearchActions from './githubSearch.actions';\r\n\r\nexport const githubSearchFeatureKey = 'githubSearch';\r\n\r\nlet initialState = {\r\n    loading : false,\r\n    errorMessage : '',\r\n    profile : {},\r\n    repos : []\r\n};\r\n\r\nexport const reducer = (state = initialState , action) => {\r\n    let {type , payload} = action;\r\n    switch(type) {\r\n        // for profile data\r\n        case githubSearchActions.FETCH_PROFILE_INFO_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading : true\r\n            };\r\n        case githubSearchActions.FETCH_PROFILE_INFO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading : false,\r\n                profile: payload\r\n            };\r\n        case githubSearchActions.FETCH_PROFILE_INFO_FAILURE:\r\n            return {\r\n                ...state,\r\n                loading : false,\r\n                errorMessage: payload\r\n            };\r\n         // for repos data\r\n        case githubSearchActions.FETCH_REPOS_INFO_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading : true\r\n            };\r\n        case githubSearchActions.FETCH_REPOS_INFO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading : false,\r\n                repos: payload\r\n            };\r\n        case githubSearchActions.FETCH_REPOS_INFO_FAILURE:\r\n            return {\r\n                ...state,\r\n                loading : false,\r\n                errorMessage: payload\r\n            };\r\n        default : return state;\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}